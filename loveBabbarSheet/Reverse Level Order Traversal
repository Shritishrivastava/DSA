vector<int> reverseLevelOrder(TreeNode<int>*root){
    vector<int> result;
    if (root == nullptr) return result;
    queue<TreeNode<int>*> q;
    stack<int>st;
    q.push(root);

    while(!q.empty()){
        TreeNode<int>* node = q.front();
        q.pop();

        st.push(node -> val);

        if(node -> left != nullptr){
            q.push(node -> left);
        }
        if(node -> right != nullptr){
            q.push(node -> right);
        }
    }
    
    while(!st.empty()){
        result.push_back(st.top());
        st.pop();
    }
    return result;
}
